package etc;

public class WhileExample {

    public static void main(String[] args) {

        int counter = 10; // инициализация переменной
        while (counter > 0){ //логическое выражение,условие, возравщает true/false. вычисляется перед началом цикла(перед тем что в теле цикла),
            System.out.println(counter); //тело цикла                          //а затем каждый раз заново перед выполнением очередной итерации
            counter --; //тело цикла, при каждой итерации уменьшает значение
        }               //counter на единицу, беря значение, которое получилось после последней итерации


        int count = 1;
        while (count < 11){ // 11 исключается, т.е. на экран выведется значения по 11-е исключительно
            System.out.println(count);
            count++; //т.к. цикл while проверяет/вычисляет условное выражение в начале цикла,
                     //перед телом, то тело не будет выполняться ни разу, если условие изначально ложное
        }

        boolean catIsHungry;
        catIsHungry = true;
        while (!catIsHungry){
            System.out.println("Give me the fish, meow!");//сообщение не будет выведено, так как условие изначально ложное
                                                          //(если убрать знак "не" из условия, то получим бесконечный цикл, т.к. условие всегда будет правдиво)
        }

        int i, j;//будем вычислять среднее значение двух переменных
        i = 10;
        j = 30;
        while (++i < --j); // пока значение i будет меньше значения j - увеличивать на единицу значение i и уменьшать на единицу j
        System.out.println("Среднее значение :" + i);// получается выводим значение i, на котором встретились i, j


        int countr = 10; //  цикл do-while отличается от обычного while тем, что выполняется хотябы один раз, даже если условие ложное
        do {
            System.out.println(countr);
        } while (-- countr < 0); //сначала выполняется уменьшение значения на единицу, возвращается новое значение и затем сравнивается с нулем


    }



}
