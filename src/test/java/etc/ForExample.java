package etc;

public class ForExample {

    public static void main(String[] args) {

        for (int x = 0; x < 9; x++){ //выражение инициализации выполняется один раз, затем вычисляется условие(булево выражение), проверяя условие цикла каждый раз пред выполнением шага
                                     //чаще всго используется для пербора
            System.out.println(x);
        }

        for (int life = 9; life >= 0; life-- ){
            System.out.println(" у кота осталось " + life + " жизней");
        }

        for (int z = 0; z < 9; z += 2){ //выводим только четные числа
            System.out.println(z);
        }

        int i; //если не вынести инициализованную переменную за пределы цикла, то  невозможно будет использовать, если она есть только в цикл, то циклом е область видимости и ограниивается
        for (i = 0; i < 11; i ++){
            System.out.println(i);
        }

        int a,b;
        for (a = 1, b = 9; a < b; a++, b--){ //пока а меньше б , то а увелчвается на единицу, а б уменьшается на единцу
            System.out.println("a = " + a);
            System.out.println("b = " + b);
        }

        int c,d; // делает тоже самое что и пример выше, только в этом примере вторая переменная не включена в оператор фор
        d = 9;
        for (c = 1; c < d; c++){
            System.out.println("c = " + c);
            System.out.println("d = " + d);
            d--;
        }

        int[] mice = {1, 2, 3, 4, 5, 6, 7, 8, 9}; //создание массива из исел от 1 до 9 (длина массива(размер) это общее клоичество элементов в нем)
        for (int q = 0; q < mice.length; q++){ // используем не число 9, а длину массива, то позволяет сортировать, упордочивать, переворачивать массив и тд.
            System.out.println("" + mice[q]);
        }

        int[] cats = {1, 2, 3, 4, 5, 6, 7, 8, 9}; // обратный отсчет
        for (int w = mice.length -1; w >= 0; w--){ // int w = mice.length -1(более универсальный способо записи) или же вместо него: w = 9
            System.out.println("" + cats[w]);
        }


    }
}
